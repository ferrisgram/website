import Image from "next/image";
import Ferrisgram from "../assets/ferrisgram_text.png";
import ferrisgram from "../public/ferrisgram.png";

export default function Home() {
  return (
    <>
      <section id="home" className="bg-[url('/main-bg.webp')] min-h-screen">
        <div className="container px-8 mx-auto">
          <div className="lg:flex py-10">
            <div className="w-full lg:w-1/2">
              <Image
                src={Ferrisgram.src}
                alt="Ferrisgram"
                width={1116}
                height={223}
              />
              <h1 className="hidden">Ferrisgram</h1>
              <h2 className="font-notoSans font-xl text-[#d9d9d9] text-2xl pl-7">
                An elegant Rust Client for the Telegram Bot API.
              </h2>

              <div className="lg:pt-32 pt-10 pl-7">
                <span className="text-4xl font-bold text-[#F8F8F8]">
                  KEY FEATURES
                </span>
                <ul className="pl-10 pt-2 list-disc text-[#F8F8F8] text-lg">
                  <li>
                    <span className="font-bold">Easy to use:</span>{" "}
                    <span>
                      Heavily inspired by the python-telegram-bot, Ferrisgram is
                      designed so that even a beginner can easily make a bot
                      with it.
                    </span>
                  </li>

                  <li>
                    <span className="font-bold">Asynchronous:</span>{" "}
                    <span>
                      Ferrisgram is powered by Rust&apos;s built-in await async
                      syntax.
                    </span>
                  </li>

                  <li>
                    <span className="font-bold">Typo-Free Docs:</span>{" "}
                    <span>
                      Autogenerated documentation of the native Bot API types
                      and methods make it typo-free.
                    </span>
                  </li>

                  <li>
                    <span className="font-bold">Filters:</span>{" "}
                    <span>
                      Ferrisgram provides filters to make it easy for you to
                      sort different types of updates in a managed way.
                    </span>
                  </li>
                </ul>
              </div>
            </div>

            <div className="flex object-cover items-center lg:w-1/2 justify-center -mt-20">
              <div className="object-cover xl:w-[50rem] xl:h-[50rem] rounded-full select-none text-white">
                <Image
                  className="object-cover rounded-full select-none text-white"
                  src={ferrisgram.src}
                  alt="Ferrisgram"
                  width={ferrisgram.width}
                  height={ferrisgram.height}
                />

                {/* For Static Build */}
                {/* <img
                  className="object-cover rounded-full select-none text-white"
                  src={ferrisgram.src}
                  alt="Ferrisgram"
                /> */}
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
}
